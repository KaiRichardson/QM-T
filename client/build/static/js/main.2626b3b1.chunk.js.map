{"version":3,"sources":["authProvider.js","comments/PostQuickCreateCancelButton.js","comments/PostQuickCreate.js","comments/PostPreview.js","comments/PostReferenceInput.js","comments/CommentCreate.js","comments/CommentEdit.js","comments/CommentList.js","comments/index.js","customRouteLayout.js","customRouteNoLayout.js","data.js","addUploadFeature.js","dataProvider.js","i18n/en.js","i18nProvider.js","Layout.js","posts/PostCreate.js","posts/PostTitle.js","posts/TagReferenceInput.js","posts/PostEdit.js","posts/ResetViewsButton.js","posts/PostList.js","posts/PostShow.js","posts/index.js","users/Aside.js","users/UserCreate.js","users/UserTitle.js","users/UserEdit.js","users/UserEditEmbedded.js","users/UserList.js","users/index.js","users/UserShow.js","tags/TagCreate.js","tags/TagEdit.js","tags/TagList.js","tags/index.js","tags/TagShow.js","index.js"],"names":["login","username","password","localStorage","removeItem","Promise","resolve","setItem","reject","logout","checkError","status","checkAuth","getItem","getPermissions","role","useStyles","makeStyles","button","margin","position","iconPaddingStyle","paddingRight","PostQuickCreateCancelButton","onClick","label","translate","useTranslate","classes","Button","className","_","PostQuickCreateToolbar","submitting","onCancel","props","Toolbar","disableGutters","SaveButton","form","padding","PostQuickCreate","onSave","dispatch","useDispatch","useSelector","state","admin","loading","handleSave","useCallback","values","type","payload","data","meta","fetch","CREATE","resource","onSuccess","callback","onFailure","error","showNotification","message","SimpleForm","save","saving","redirect","toolbar","TextInput","source","validate","required","fullWidth","multiline","PostPreview","record","resources","id","version","ui","viewVersion","SimpleShowLayout","TextField","PostReferenceInput","change","useForm","useState","showCreateDialog","setShowCreateDialog","showPreviewDialog","setShowPreviewDialog","newPostId","setNewPostId","useEffect","crudGetMatching","page","perPage","field","order","handleNewClick","event","preventDefault","handleShowClick","handleCloseCreate","handleCloseShow","post","ReferenceInput","defaultValue","SelectInput","optionText","data-testid","subscription","render","post_id","Dialog","open","onClose","aria-label","DialogTitle","DialogContent","basePath","DialogActions","now","Date","defaultSort","CommentCreate","Create","reference","allowEmpty","sort","minLength","DateInput","LinkToRelatedPost","Link","to","Typography","variant","color","align","useEditStyles","actions","float","card","marginTop","maxWidth","OptionRenderer","title","inputText","CommentEdit","useEditController","Title","defaultTitle","hasShow","hasList","Card","disabled","AutocompleteInput","matchSuggestion","filterValue","suggestion","options","CommentFilter","Filter","SearchInput","alwaysOn","exporter","records","fetchRelatedRecords","then","posts","map","author","recordForExport","author_name","name","post_title","jsonExport","headers","csv","console","downloadCSV","CommentPagination","ids","total","setPage","nbPages","Math","ceil","length","key","PaginationLimit","useListStyles","theme","height","display","flexDirection","cardContent","typography","body1","cardLink","flexGrow","cardLinkLink","cardActions","justifyContent","CommentGrid","Grid","spacing","container","item","sm","md","lg","CardHeader","subheader","DateField","avatar","Avatar","CardContent","ReferenceField","CardActions","EditButton","ShowButton","defaultProps","CommentMobileList","SimpleList","primaryText","secondaryText","body","tertiaryText","created_at","toLocaleDateString","leftAvatar","list","isSmall","useMediaQuery","breakpoints","down","List","filters","pagination","component","create","edit","show","ShowGuesser","icon","ChatBubbleIcon","CustomRouteLayout","useAuthenticated","useGetList","loaded","CustomRouteNoLayout","crudGetList","ticket","note","MR","MR1","MR2","MR3","TP","TP1","TP2","CSF","CSF1","views","average_note","undocumented","published_at","tags","category","subcategory","backlinks","date","url","notifications","comments","email","published","parent_id","users","convertFileToBase64","file","reader","FileReader","readAsDataURL","rawFile","onload","result","onerror","uploadCapableDataProvider","dataProvider","update","params","pictures","newPictures","filter","p","File","formerPictures","all","base64Pictures","picture64","src","transformedNewPictures","addUploadFeature","fakeRestProvider","sometimesFailsDataProvider","Proxy","get","target","Error","delayedDataProvider","setTimeout","cacheDataProviderProxy","messages","simple","action","close","resetViews","englishMessages","fields","commentable","commentable_short","nb_view","teaser","authors","search","summary","miscellaneous","save_and_edit","save_and_add","save_and_show","save_with_average_note","comment","about","user","security","fr","default","polyglotI18nProvider","locale","menuItem","palette","text","secondary","minWidth","SwitchLanguage","forwardRef","ref","useLocale","setLocale","useSetLocale","MenuItem","ListItemIcon","MyUserMenu","UserMenu","MyAppBar","AppBar","userMenu","PostCreateToolbar","submitOnEnter","transform","backlinksDefaultValue","PostCreate","permissions","initialValues","useMemo","dateDefaultValue","errors","forEach","autoFocus","RadioButtonGroupInput","choices","BooleanInput","ArrayInput","SimpleFormIterator","FormDataConsumer","formData","scopedFormData","getSource","rest","user_id","input","width","TagReferenceInput","setFilter","ReferenceArrayInput","AutocompleteArrayInput","EditActions","TopToolbar","CloneButton","PostEdit","Edit","PostTitle","TabbedForm","warnWhenUnsavedChanges","FormTab","resettable","CheckboxGroupInput","ImageInput","multiple","accept","ImageField","addLabel","NumberInput","number","minValue","ReferenceManyField","Datagrid","ResetViewsButton","selectedIds","notify","useNotify","unselectAll","useUnselectAll","refresh","useRefresh","useUpdateMany","CRUD_UPDATE_MANY","smart_count","undoable","updateMany","useQuickFilterStyles","BookIcon","chip","marginBottom","QuickFilter","Chip","PostFilter","lodashGet","backlink","err","overflow","textOverflow","whiteSpace","hiddenOnSmallScreens","publishedAt","fontStyle","PostListBulkActions","memo","BulkDeleteButton","BulkExportButton","usePostListActionToolbarStyles","alignItems","PostListActionToolbar","children","Children","cloneElement","rowClick","PostPanel","dangerouslySetInnerHTML","__html","PostList","bulkActionButtons","expand","optimized","cellClassName","sortByOrder","BooleanField","sortable","NumberField","ReferenceArrayField","sortBy","headerClassName","SingleFieldList","ChipField","CreateRelatedComment","pathname","controllerProps","useShowController","Show","TabbedShowLayout","Tab","ArrayField","UrlField","RichTextField","stripTags","SelectField","root","up","overflowX","Aside","UserEditToolbar","hasEdit","hasCreate","UserCreate","aside","path","UserTitle","useToolbarStyles","DeleteWithConfirmButton","UserEdit","UserEditEmbedded","UserFilter","PeopleIcon","UserBulkActionButtons","BulkDeleteWithConfirmButton","memoize","filterDefaultValues","TagCreate","TagEdit","SmallCard","SubTree","level","getChildNodes","openChildren","toggleNode","childNodes","hasChildren","includes","ListItem","style","paddingLeft","ListItemText","primary","ListItemSecondaryAction","Collapse","in","timeout","unmountOnExit","disablePadding","node","Tree","setOpenChildren","splice","indexOf","nodes","roots","Admin","authProvider","i18nProvider","layout","Layout","appBar","customRoutes","exact","noLayout","Resource","document","getElementById"],"mappings":"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","file":"static/js/main.2626b3b1.chunk.js","sourcesContent":["// Authenticatd by default\nexport default {\n    login: ({ username, password }) => {\n        if (username === 'login' && password === 'password') {\n            localStorage.removeItem('not_authenticated');\n            localStorage.removeItem('role');\n            return Promise.resolve();\n        }\n        if (username === 'user' && password === 'password') {\n            localStorage.setItem('role', 'user');\n            localStorage.removeItem('not_authenticated');\n            return Promise.resolve();\n        }\n        if (username === 'admin' && password === 'password') {\n            localStorage.setItem('role', 'admin');\n            localStorage.removeItem('not_authenticated');\n            return Promise.resolve();\n        }\n        localStorage.setItem('not_authenticated', true);\n        return Promise.reject();\n    },\n    logout: () => {\n        localStorage.setItem('not_authenticated', true);\n        localStorage.removeItem('role');\n        return Promise.resolve();\n    },\n    checkError: ({ status }) => {\n        return status === 401 || status === 403\n            ? Promise.reject()\n            : Promise.resolve();\n    },\n    checkAuth: () => {\n        return localStorage.getItem('not_authenticated')\n            ? Promise.reject()\n            : Promise.resolve();\n    },\n    getPermissions: () => {\n        const role = localStorage.getItem('role');\n        return Promise.resolve(role);\n    },\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useTranslate } from 'react-admin';\n\nconst useStyles = makeStyles({\n    button: {\n        margin: '10px 24px',\n        position: 'relative',\n    },\n    iconPaddingStyle: {\n        paddingRight: '0.5em',\n    },\n});\n\nconst PostQuickCreateCancelButton = ({\n    onClick,\n    label = 'ra.action.cancel',\n}) => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    return (\n        <Button className={classes.button} onClick={onClick}>\n            <IconCancel className={classes.iconPaddingStyle} />\n            {label && translate(label, { _: label })}\n        </Button>\n    );\n};\n\nPostQuickCreateCancelButton.propTypes = {\n    label: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default PostQuickCreateCancelButton;\n","import * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    CREATE,\n    SaveButton,\n    SimpleForm,\n    TextInput,\n    Toolbar,\n    required,\n    showNotification,\n} from 'react-admin'; // eslint-disable-line import/no-unresolved\n\nimport CancelButton from './PostQuickCreateCancelButton';\n\n// We need a custom toolbar to add our custom buttons\n// The CancelButton allows to close the modal without submitting anything\nconst PostQuickCreateToolbar = ({ submitting, onCancel, ...props }) => (\n    <Toolbar {...props} disableGutters>\n        <SaveButton />\n        <CancelButton onClick={onCancel} />\n    </Toolbar>\n);\n\nPostQuickCreateToolbar.propTypes = {\n    submitting: PropTypes.bool,\n    onCancel: PropTypes.func.isRequired,\n};\n\nconst useStyles = makeStyles({\n    form: { padding: 0 },\n});\n\nconst PostQuickCreate = ({ onCancel, onSave, ...props }) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const submitting = useSelector(state => state.admin.loading > 0);\n\n    const handleSave = useCallback(\n        values => {\n            dispatch({\n                type: 'QUICK_CREATE',\n                payload: { data: values },\n                meta: {\n                    fetch: CREATE,\n                    resource: 'posts',\n                    onSuccess: {\n                        callback: ({ payload: { data } }) => onSave(data),\n                    },\n                    onFailure: {\n                        callback: ({ error }) => {\n                            dispatch(showNotification(error.message, 'error'));\n                        },\n                    },\n                },\n            });\n        },\n        [dispatch, onSave]\n    );\n\n    return (\n        <SimpleForm\n            save={handleSave}\n            saving={submitting}\n            redirect={false}\n            toolbar={\n                <PostQuickCreateToolbar\n                    onCancel={onCancel}\n                    submitting={submitting}\n                />\n            }\n            classes={{ form: classes.form }}\n            {...props}\n        >\n            <TextInput source=\"title\" validate={required()} />\n            <TextInput\n                source=\"teaser\"\n                validate={required()}\n                fullWidth={true}\n                multiline={true}\n            />\n        </SimpleForm>\n    );\n};\n\nPostQuickCreate.propTypes = {\n    onCancel: PropTypes.func.isRequired,\n    onSave: PropTypes.func.isRequired,\n};\n\nexport default PostQuickCreate;\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { SimpleShowLayout, TextField } from 'react-admin';\n\nconst PostPreview = props => {\n    const record = useSelector(\n        state =>\n            state.admin.resources[props.resource]\n                ? state.admin.resources[props.resource].data[props.id]\n                : null,\n        [props.resource, props.id]\n    );\n    const version = useSelector(state => state.admin.ui.viewVersion);\n    useSelector(state => state.admin.loading > 0);\n\n    return (\n        <SimpleShowLayout version={version} record={record} {...props}>\n            <TextField source=\"id\" />\n            <TextField source=\"title\" />\n            <TextField source=\"teaser\" />\n        </SimpleShowLayout>\n    );\n};\n\nexport default PostPreview;\n","import * as React from 'react';\nimport { Fragment, useState, useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FormSpy, useForm } from 'react-final-form';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n    crudGetMatching,\n    ReferenceInput,\n    SelectInput,\n    useTranslate,\n} from 'react-admin'; // eslint-disable-line import/no-unresolved\n\nimport PostQuickCreate from './PostQuickCreate';\nimport PostPreview from './PostPreview';\n\nconst useStyles = makeStyles({\n    button: {\n        margin: '10px 24px',\n        position: 'relative',\n    },\n});\n\nconst PostReferenceInput = props => {\n    const translate = useTranslate();\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { change } = useForm();\n\n    const [showCreateDialog, setShowCreateDialog] = useState(false);\n    const [showPreviewDialog, setShowPreviewDialog] = useState(false);\n    const [newPostId, setNewPostId] = useState('');\n\n    useEffect(() => {\n        //Refresh the choices of the ReferenceInput to ensure our newly created post\n        // always appear, even after selecting another post\n        dispatch(\n            crudGetMatching(\n                'posts',\n                'comments@post_id',\n                { page: 1, perPage: 25 },\n                { field: 'id', order: 'DESC' },\n                {}\n            )\n        );\n    }, [dispatch, newPostId]);\n\n    const handleNewClick = useCallback(\n        event => {\n            event.preventDefault();\n            setShowCreateDialog(true);\n        },\n        [setShowCreateDialog]\n    );\n\n    const handleShowClick = useCallback(\n        event => {\n            event.preventDefault();\n            setShowPreviewDialog(true);\n        },\n        [setShowPreviewDialog]\n    );\n\n    const handleCloseCreate = useCallback(() => {\n        setShowCreateDialog(false);\n    }, [setShowCreateDialog]);\n\n    const handleCloseShow = useCallback(() => {\n        setShowPreviewDialog(false);\n    }, [setShowPreviewDialog]);\n\n    const handleSave = useCallback(\n        post => {\n            setShowCreateDialog(false);\n            setNewPostId(post.id);\n            change('post_id', post.id);\n        },\n        [setShowCreateDialog, setNewPostId, change]\n    );\n\n    return (\n        <Fragment>\n            <ReferenceInput {...props} defaultValue={newPostId}>\n                <SelectInput optionText=\"title\" />\n            </ReferenceInput>\n            <Button\n                data-testid=\"button-add-post\"\n                className={classes.button}\n                onClick={handleNewClick}\n            >\n                {translate('ra.action.create')}\n            </Button>\n            <FormSpy\n                subscription={{ values: true }}\n                render={({ values }) =>\n                    values.post_id ? (\n                        <Fragment>\n                            <Button\n                                data-testid=\"button-show-post\"\n                                className={classes.button}\n                                onClick={handleShowClick}\n                            >\n                                {translate('ra.action.show')}\n                            </Button>\n                            <Dialog\n                                data-testid=\"dialog-show-post\"\n                                fullWidth\n                                open={showPreviewDialog}\n                                onClose={handleCloseShow}\n                                aria-label={translate('simple.create-post')}\n                            >\n                                <DialogTitle>\n                                    {translate('simple.create-post')}\n                                </DialogTitle>\n                                <DialogContent>\n                                    <PostPreview\n                                        id={values.post_id}\n                                        basePath=\"/posts\"\n                                        resource=\"posts\"\n                                    />\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button\n                                        data-testid=\"button-close-modal\"\n                                        onClick={handleCloseShow}\n                                    >\n                                        {translate('simple.action.close')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        </Fragment>\n                    ) : null\n                }\n            />\n            <Dialog\n                data-testid=\"dialog-add-post\"\n                fullWidth\n                open={showCreateDialog}\n                onClose={handleCloseCreate}\n                aria-label={translate('simple.create-post')}\n            >\n                <DialogTitle>{translate('simple.create-post')}</DialogTitle>\n                <DialogContent>\n                    <PostQuickCreate\n                        onCancel={handleCloseCreate}\n                        onSave={handleSave}\n                        basePath=\"/posts\"\n                        resource=\"posts\"\n                    />\n                </DialogContent>\n            </Dialog>\n        </Fragment>\n    );\n};\n\nexport default PostReferenceInput;\n","import * as React from 'react';\n\nimport {\n    Create,\n    DateInput,\n    TextInput,\n    SimpleForm,\n    required,\n    minLength,\n} from 'react-admin'; // eslint-disable-line import/no-unresolved\nimport PostReferenceInput from './PostReferenceInput';\n\nconst now = new Date();\nconst defaultSort = { field: 'title', order: 'ASC' };\n\nconst CommentCreate = props => (\n    <Create {...props}>\n        <SimpleForm redirect={false}>\n            <PostReferenceInput\n                source=\"post_id\"\n                reference=\"posts\"\n                allowEmpty\n                validate={required()}\n                perPage={10000}\n                sort={defaultSort}\n            />\n            <TextInput\n                source=\"author.name\"\n                validate={minLength(10)}\n                fullWidth\n            />\n            <DateInput source=\"created_at\" defaultValue={now} />\n            <TextInput source=\"body\" fullWidth={true} multiline={true} />\n        </SimpleForm>\n    </Create>\n);\n\nexport default CommentCreate;\n","import Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as React from 'react';\nimport {\n    AutocompleteInput,\n    DateInput,\n    EditActions,\n    useEditController,\n    Link,\n    ReferenceInput,\n    SimpleForm,\n    TextInput,\n    Title,\n    minLength,\n} from 'react-admin'; // eslint-disable-line import/no-unresolved\n\nconst LinkToRelatedPost = ({ record }) => (\n    <Link to={`/posts/${record.post_id}`}>\n        <Typography variant=\"caption\" color=\"inherit\" align=\"right\">\n            See related post\n        </Typography>\n    </Link>\n);\n\nconst useEditStyles = makeStyles({\n    actions: {\n        float: 'right',\n    },\n    card: {\n        marginTop: '1em',\n        maxWidth: '30em',\n    },\n});\n\nconst OptionRenderer = ({ record }) => (\n    <span>\n        {record.title} - {record.id}\n    </span>\n);\n\nconst inputText = record => `${record.title} - ${record.id}`;\n\nconst CommentEdit = props => {\n    const classes = useEditStyles();\n    const {\n        resource,\n        record,\n        redirect,\n        save,\n        basePath,\n        version,\n    } = useEditController(props);\n    return (\n        <div className=\"edit-page\">\n            <Title defaultTitle={`Comment #${record ? record.id : ''}`} />\n            <div className={classes.actions}>\n                <EditActions\n                    basePath={basePath}\n                    resource={resource}\n                    data={record}\n                    hasShow\n                    hasList\n                />\n            </div>\n            <Card className={classes.card}>\n                {record && (\n                    <SimpleForm\n                        basePath={basePath}\n                        redirect={redirect}\n                        resource={resource}\n                        record={record}\n                        save={save}\n                        version={version}\n                    >\n                        <TextInput disabled source=\"id\" fullWidth />\n                        <ReferenceInput\n                            source=\"post_id\"\n                            reference=\"posts\"\n                            perPage={15}\n                            sort={{ field: 'title', order: 'ASC' }}\n                            fullWidth\n                        >\n                            <AutocompleteInput\n                                matchSuggestion={(filterValue, suggestion) =>\n                                    true\n                                }\n                                optionText={<OptionRenderer />}\n                                inputText={inputText}\n                                options={{ fullWidth: true }}\n                            />\n                        </ReferenceInput>\n\n                        <LinkToRelatedPost />\n                        <TextInput\n                            source=\"author.name\"\n                            validate={minLength(10)}\n                            fullWidth\n                        />\n                        <DateInput source=\"created_at\" fullWidth />\n                        <TextInput\n                            source=\"body\"\n                            validate={minLength(10)}\n                            fullWidth={true}\n                            multiline={true}\n                        />\n                    </SimpleForm>\n                )}\n            </Card>\n        </div>\n    );\n};\n\nexport default CommentEdit;\n","import * as React from 'react';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport PersonIcon from '@material-ui/icons/Person';\nimport {\n    Avatar,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Grid,\n    Toolbar,\n    useMediaQuery,\n    makeStyles,\n} from '@material-ui/core';\nimport jsonExport from 'jsonexport/dist';\nimport {\n    DateField,\n    EditButton,\n    Filter,\n    List,\n    PaginationLimit,\n    ReferenceField,\n    ReferenceInput,\n    SearchInput,\n    SelectInput,\n    ShowButton,\n    SimpleList,\n    TextField,\n    downloadCSV,\n    useTranslate,\n} from 'react-admin'; // eslint-disable-line import/no-unresolved\n\nconst CommentFilter = props => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <ReferenceInput source=\"post_id\" reference=\"posts\">\n            <SelectInput optionText=\"title\" />\n        </ReferenceInput>\n    </Filter>\n);\n\nconst exporter = (records, fetchRelatedRecords) =>\n    fetchRelatedRecords(records, 'post_id', 'posts').then(posts => {\n        const data = records.map(record => {\n            const { author, ...recordForExport } = record; // omit author\n            recordForExport.author_name = author.name;\n            recordForExport.post_title = posts[record.post_id].title;\n            return recordForExport;\n        });\n        const headers = [\n            'id',\n            'author_name',\n            'post_id',\n            'post_title',\n            'created_at',\n            'body',\n        ];\n\n        jsonExport(data, { headers }, (error, csv) => {\n            if (error) {\n                console.error(error);\n            }\n            downloadCSV(csv, 'comments');\n        });\n    });\n\nconst CommentPagination = ({ loading, ids, page, perPage, total, setPage }) => {\n    const translate = useTranslate();\n    const nbPages = Math.ceil(total / perPage) || 1;\n    if (!loading && (total === 0 || (ids && !ids.length))) {\n        return <PaginationLimit total={total} page={page} ids={ids} />;\n    }\n\n    return (\n        nbPages > 1 && (\n            <Toolbar>\n                {page > 1 && (\n                    <Button\n                        color=\"primary\"\n                        key=\"prev\"\n                        onClick={() => setPage(page - 1)}\n                    >\n                        <ChevronLeft />\n                        &nbsp;\n                        {translate('ra.navigation.prev')}\n                    </Button>\n                )}\n                {page !== nbPages && (\n                    <Button\n                        color=\"primary\"\n                        key=\"next\"\n                        onClick={() => setPage(page + 1)}\n                    >\n                        {translate('ra.navigation.next')}&nbsp;\n                        <ChevronRight />\n                    </Button>\n                )}\n            </Toolbar>\n        )\n    );\n};\n\nconst useListStyles = makeStyles(theme => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardContent: theme.typography.body1,\n    cardLink: {\n        ...theme.typography.body1,\n        flexGrow: 1,\n    },\n    cardLinkLink: {\n        display: 'inline',\n    },\n    cardActions: {\n        justifyContent: 'flex-end',\n    },\n}));\n\nconst CommentGrid = ({ ids, data, basePath }) => {\n    const translate = useTranslate();\n    const classes = useListStyles();\n\n    return (\n        <Grid spacing={2} container>\n            {ids.map(id => (\n                <Grid item key={id} sm={12} md={6} lg={4}>\n                    <Card className={classes.card}>\n                        <CardHeader\n                            className=\"comment\"\n                            title={\n                                <TextField\n                                    record={data[id]}\n                                    source=\"author.name\"\n                                />\n                            }\n                            subheader={\n                                <DateField\n                                    record={data[id]}\n                                    source=\"created_at\"\n                                />\n                            }\n                            avatar={\n                                <Avatar>\n                                    <PersonIcon />\n                                </Avatar>\n                            }\n                        />\n                        <CardContent className={classes.cardContent}>\n                            <TextField record={data[id]} source=\"body\" />\n                        </CardContent>\n                        <CardContent className={classes.cardLink}>\n                            {translate('comment.list.about')}&nbsp;\n                            <ReferenceField\n                                resource=\"comments\"\n                                record={data[id]}\n                                source=\"post_id\"\n                                reference=\"posts\"\n                                basePath={basePath}\n                            >\n                                <TextField\n                                    source=\"title\"\n                                    className={classes.cardLinkLink}\n                                />\n                            </ReferenceField>\n                        </CardContent>\n                        <CardActions className={classes.cardActions}>\n                            <EditButton\n                                resource=\"posts\"\n                                basePath={basePath}\n                                record={data[id]}\n                            />\n                            <ShowButton\n                                resource=\"posts\"\n                                basePath={basePath}\n                                record={data[id]}\n                            />\n                        </CardActions>\n                    </Card>\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nCommentGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nconst CommentMobileList = props => (\n    <SimpleList\n        primaryText={record => record.author.name}\n        secondaryText={record => record.body}\n        tertiaryText={record =>\n            new Date(record.created_at).toLocaleDateString()\n        }\n        leftAvatar={() => <PersonIcon />}\n        {...props}\n    />\n);\n\nconst CommentList = props => {\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n\n    return (\n        <List\n            {...props}\n            perPage={6}\n            exporter={exporter}\n            filters={<CommentFilter />}\n            pagination={<CommentPagination />}\n            component=\"div\"\n        >\n            {isSmall ? <CommentMobileList /> : <CommentGrid />}\n        </List>\n    );\n};\n\nexport default CommentList;\n","import ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport CommentCreate from './CommentCreate';\nimport CommentEdit from './CommentEdit';\nimport CommentList from './CommentList';\nimport { ShowGuesser } from 'react-admin';\n\nexport default {\n    list: CommentList,\n    create: CommentCreate,\n    edit: CommentEdit,\n    show: ShowGuesser,\n    icon: ChatBubbleIcon,\n};\n","import * as React from 'react';\nimport { useGetList, useAuthenticated, Title } from 'react-admin';\n\nconst CustomRouteLayout = () => {\n    useAuthenticated();\n    const { ids, data, total, loaded } = useGetList(\n        'posts',\n        { page: 1, perPage: 10 },\n        { field: 'published_at', order: 'DESC' }\n    );\n\n    return loaded ? (\n        <div>\n            <Title title=\"Example Admin\" />\n            <h1>Posts</h1>\n            <p>\n                Found <span className=\"total\">{total}</span> posts !\n            </p>\n            <ul>\n                {ids.map(id => (\n                    <li key={id}>{data[id].title}</li>\n                ))}\n            </ul>\n        </div>\n    ) : null;\n};\n\nexport default CustomRouteLayout;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crudGetList } from 'react-admin';\n\nconst CustomRouteNoLayout = () => {\n    const dispatch = useDispatch();\n\n    const loaded = useSelector(\n        state =>\n            state.admin.resources.posts &&\n            state.admin.resources.posts.list.total > 0\n    );\n\n    const total = useSelector(state =>\n        state.admin.resources.posts ? state.admin.resources.posts.list.total : 0\n    );\n\n    useEffect(() => {\n        dispatch(\n            crudGetList(\n                'posts',\n                { page: 0, perPage: 10 },\n                { field: 'id', order: 'ASC' }\n            )\n        );\n    }, [dispatch]);\n\n    return (\n        <div>\n            <h1>Posts</h1>\n            {!loaded && <p className=\"app-loader\">Loading...</p>}\n            {loaded && (\n                <p>\n                    Found <span className=\"total\">{total}</span> posts !\n                </p>\n            )}\n        </div>\n    );\n};\n\nexport default CustomRouteNoLayout;\n","export default {\n  posts: [\n    {\n      id: 1,\n      ticket:\n        \"Accusantium qui nihil voluptatum quia voluptas maxime ab similique\",\n      note:\n        \"<p>Rerum velit quos est <strong>similique</strong>. Consectetur tempora eos ullam velit nobis sit debitis. Magni explicabo omnis delectus labore vel recusandae.</p><p>Aut a minus laboriosam harum placeat quas minima fuga. Quos nulla fuga quam officia tempore. Rerum occaecati ut eum et tempore. Nam ab repudiandae et nemo praesentium.</p><p>Cumque corporis officia occaecati ducimus sequi laborum omnis ut. Nam aspernatur veniam fugit. Nihil eum libero ea dolorum ducimus impedit sed. Quidem inventore porro corporis debitis eum in. Nesciunt unde est est qui nulla. Esse sunt placeat molestiae molestiae sed quia. Sunt qui quidem quos velit reprehenderit quos blanditiis ducimus. Sint et molestiae maxime ut consequatur minima. Quaerat rem voluptates voluptatem quos. Corporis perferendis in provident iure. Commodi odit exercitationem excepturi et deserunt qui.</p><p>Optio iste necessitatibus velit non. Neque sed occaecati culpa porro culpa. Quia quam in molestias ratione et necessitatibus consequatur. Est est tempora consequatur voluptatem vel. Mollitia tenetur non quis omnis perspiciatis deserunt sed necessitatibus. Ad rerum reiciendis sunt aspernatur.</p><p>Est ullam ut magni aspernatur. Eum et sed tempore modi.</p><p>Earum aperiam sit neque quo laborum suscipit unde. Expedita nostrum itaque non non adipisci. Ut delectus quis delectus est at sint. Iste hic qui ea eaque eaque sed id. Hic placeat rerum numquam id velit deleniti voluptatem. Illum adipisci voluptas adipisci ut alias. Earum exercitationem iste quidem eveniet aliquid hic reiciendis. Exercitationem est sunt in minima consequuntur. Aut quaerat libero dolorem.</p>\",\n      MR: [\n        {\n          MR1: 1,\n          MR2: 1,\n          MR3: [1, false],\n        },\n      ],\n      TP: [\n        {\n          TP1: 1,\n          TP2: 2,\n        },\n      ],\n      CSF: [\n        {\n          CSF1: 1,\n        },\n      ],\n      views: 143,\n      average_note: 2.72198,\n      undocumented: true,\n      published_at: new Date(\"2012-08-06\"),\n      tags: [1, 3],\n      category: \"tech\",\n      subcategory: \"computers\",\n      backlinks: [\n        {\n          date: \"2012-08-09T00:00:00.000Z\",\n          url: \"http://example.com/bar/baz.html\",\n        },\n      ],\n      notifications: [12, 31, 42],\n    },\n  ],\n  comments: [\n    {\n      id: 1,\n      author: {},\n      post_id: 6,\n      body:\n        \"Queen, tossing her head through the wood. 'If it had lost something; and she felt sure it.\",\n      created_at: new Date(\"2012-08-02\"),\n    },\n    {\n      id: 2,\n      author: {\n        name: \"Kiley Pouros\",\n        email: \"kiley@gmail.com\",\n      },\n      post_id: 9,\n      body:\n        \"White Rabbit: it was indeed: she was out of the ground--and I should frighten them out of its right paw round, 'lives a March Hare. 'Sixteenth,'.\",\n      created_at: new Date(\"2012-08-08\"),\n    },\n    {\n      id: 3,\n      author: {\n        name: \"Justina Hegmann\",\n      },\n      post_id: 3,\n      body:\n        \"I'm not Ada,' she said, 'and see whether it's marked \\\"poison\\\" or.\",\n      created_at: new Date(\"2012-08-02\"),\n    },\n    {\n      id: 4,\n      author: {\n        name: \"Ms. Brionna Smitham MD\",\n      },\n      post_id: 6,\n      body:\n        \"Dormouse. 'Fourteenth of March, I think I can say.' This was such a noise inside, no one else seemed inclined.\",\n      created_at: new Date(\"2014-09-24\"),\n    },\n    {\n      id: 5,\n      author: {\n        name: \"Edmond Schulist\",\n      },\n      post_id: 1,\n      body:\n        \"I ought to tell me your history, you know,' the Hatter and the happy summer days. THE.\",\n      created_at: new Date(\"2012-08-07\"),\n    },\n    {\n      id: 6,\n      author: {\n        name: \"Danny Greenholt\",\n      },\n      post_id: 6,\n      body:\n        \"Duchess asked, with another hedgehog, which seemed to be lost: away went Alice after it, never once considering how in the other. In the very tones of.\",\n      created_at: new Date(\"2012-08-09\"),\n    },\n    {\n      id: 7,\n      author: {\n        name: \"Luciano Berge\",\n      },\n      post_id: 5,\n      body:\n        \"While the Panther were sharing a pie--' [later editions continued as follows.\",\n      created_at: new Date(\"2012-09-06\"),\n    },\n    {\n      id: 8,\n      author: {\n        name: \"Annamarie Mayer\",\n      },\n      post_id: 5,\n      body:\n        \"I tell you, you coward!' and at once and put it more clearly,' Alice.\",\n      created_at: new Date(\"2012-10-03\"),\n    },\n    {\n      id: 9,\n      author: {\n        name: \"Breanna Gibson\",\n      },\n      post_id: 2,\n      body:\n        \"THAT. Then again--\\\"BEFORE SHE HAD THIS FIT--\\\" you never tasted an egg!' 'I HAVE tasted eggs, certainly,' said Alice, as she spoke. Alice did not like to have it.\",\n      created_at: new Date(\"2012-11-06\"),\n    },\n    {\n      id: 10,\n      author: {\n        name: \"Logan Schowalter\",\n      },\n      post_id: 3,\n      body:\n        \"I'd been the whiting,' said the Hatter, it woke up again with a T!' said the Gryphon. '--you advance twice--' 'Each with a growl, And concluded the banquet--] 'What IS the fun?' said.\",\n      created_at: new Date(\"2012-12-07\"),\n    },\n    {\n      id: 11,\n      author: {\n        name: \"Logan Schowalter\",\n      },\n      post_id: 1,\n      body:\n        \"I don't want to be?' it asked. 'Oh, I'm not Ada,' she said, 'and see whether it's marked \\\"poison\\\" or not'; for she had asked it aloud; and in despair she put her hand on the end of the.\",\n      created_at: new Date(\"2012-08-05\"),\n    },\n  ],\n  tags: [\n    {\n      id: 1,\n      name: \"Sport\",\n      published: 1,\n    },\n    {\n      id: 2,\n      name: \"Technology\",\n      published: false,\n    },\n    {\n      id: 3,\n      name: \"Code\",\n      published: true,\n    },\n    {\n      id: 4,\n      name: \"Photo\",\n      published: false,\n    },\n    {\n      id: 5,\n      name: \"Music\",\n      published: 1,\n    },\n    {\n      id: 6,\n      name: \"Parkour\",\n      published: 1,\n      parent_id: 1,\n    },\n    {\n      id: 7,\n      name: \"Crossfit\",\n      published: 1,\n      parent_id: 1,\n    },\n    {\n      id: 8,\n      name: \"Computing\",\n      published: 1,\n      parent_id: 2,\n    },\n    {\n      id: 9,\n      name: \"Nanoscience\",\n      published: 1,\n      parent_id: 2,\n    },\n    {\n      id: 10,\n      name: \"Blockchain\",\n      published: 1,\n      parent_id: 2,\n    },\n    {\n      id: 11,\n      name: \"Node\",\n      published: 1,\n      parent_id: 3,\n    },\n    {\n      id: 12,\n      name: \"React\",\n      published: 1,\n      parent_id: 3,\n    },\n    {\n      id: 13,\n      name: \"Nature\",\n      published: 1,\n      parent_id: 4,\n    },\n    {\n      id: 14,\n      name: \"People\",\n      published: 1,\n      parent_id: 4,\n    },\n    {\n      id: 15,\n      name: \"Animals\",\n      published: 1,\n      parent_id: 13,\n    },\n    {\n      id: 16,\n      name: \"Moutains\",\n      published: 1,\n      parent_id: 13,\n    },\n    {\n      id: 17,\n      name: \"Rap\",\n      published: 1,\n      parent_id: 5,\n    },\n    {\n      id: 18,\n      name: \"Rock\",\n      published: 1,\n      parent_id: 5,\n    },\n    {\n      id: 19,\n      name: \"World\",\n      published: 1,\n      parent_id: 5,\n    },\n  ],\n  users: [\n    {\n      id: 1,\n      name: \"Logan Schowalter\",\n      role: \"admin\",\n    },\n    {\n      id: 2,\n      name: \"Breanna Gibson\",\n      role: \"user\",\n    },\n    {\n      id: 3,\n      name: \"Annamarie Mayer\",\n      role: \"user\",\n    },\n  ],\n};\n","/**\n * For posts update only, convert uploaded image in base 64 and attach it to\n * the `picture` sent property, with `src` and `title` attributes.\n */\nconst addUploadCapabilities = dataProvider => ({\n    ...dataProvider,\n    update: (resource, params) => {\n        if (resource !== 'posts' || !params.data.pictures) {\n            // fallback to the default implementation\n            return dataProvider.update(resource, params);\n        }\n        // The posts edition form uses a file upload widget for the pictures field.\n        // Freshly dropped pictures are File objects\n        // and must be converted to base64 strings\n        const newPictures = params.data.pictures.filter(\n            p => p.rawFile instanceof File\n        );\n        const formerPictures = params.data.pictures.filter(\n            p => !(p.rawFile instanceof File)\n        );\n\n        return Promise.all(newPictures.map(convertFileToBase64))\n            .then(base64Pictures =>\n                base64Pictures.map(picture64 => ({\n                    src: picture64,\n                    title: `${params.data.title}`,\n                }))\n            )\n            .then(transformedNewPictures =>\n                dataProvider.update(resource, {\n                    ...params,\n                    data: {\n                        ...params.data,\n                        pictures: [\n                            ...transformedNewPictures,\n                            ...formerPictures,\n                        ],\n                    },\n                })\n            );\n    },\n});\n\n/**\n * Convert a `File` object returned by the upload input into a base 64 string.\n * That's not the most optimized way to store images in production, but it's\n * enough to illustrate the idea of data provider decoration.\n */\nconst convertFileToBase64 = file =>\n    new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.rawFile);\n\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n    });\n\nexport default addUploadCapabilities;\n","import fakeRestProvider from 'ra-data-fakerest';\nimport { cacheDataProviderProxy } from 'react-admin';\n\nimport data from './data';\nimport addUploadFeature from './addUploadFeature';\n\nconst dataProvider = fakeRestProvider(data, true);\nconst uploadCapableDataProvider = addUploadFeature(dataProvider);\nconst sometimesFailsDataProvider = new Proxy(uploadCapableDataProvider, {\n    get: (target, name) => (resource, params) => {\n        // add rejection by type or resource here for tests, e.g.\n        // if (name === 'delete' && resource === 'posts') {\n        //     return Promise.reject(new Error('deletion error'));\n        // }\n        if (\n            resource === 'posts' &&\n            params.data &&\n            params.data.title === 'f00bar'\n        ) {\n            return Promise.reject(new Error('this title cannot be used'));\n        }\n        return uploadCapableDataProvider[name](resource, params);\n    },\n});\nconst delayedDataProvider = new Proxy(sometimesFailsDataProvider, {\n    get: (target, name) => (resource, params) =>\n        new Promise(resolve =>\n            setTimeout(\n                () =>\n                    resolve(sometimesFailsDataProvider[name](resource, params)),\n                300\n            )\n        ),\n});\n\nexport default cacheDataProviderProxy(delayedDataProvider);\n","import englishMessages from 'ra-language-english';\n\nexport const messages = {\n    simple: {\n        action: {\n            close: 'Close',\n            resetViews: 'Reset views',\n        },\n        'create-post': 'New post',\n    },\n    ...englishMessages,\n    resources: {\n        posts: {\n            name: 'Post |||| Posts',\n            fields: {\n                average_note: 'Average note',\n                body: 'Body',\n                comments: 'Comments',\n                commentable: 'Commentable',\n                commentable_short: 'Com.',\n                created_at: 'Created at',\n                notifications: 'Notifications recipients',\n                nb_view: 'Nb views',\n                password: 'Password (if protected post)',\n                pictures: 'Related Pictures',\n                published_at: 'Published at',\n                teaser: 'Teaser',\n                tags: 'Tags',\n                title: 'Title',\n                views: 'Views',\n                authors: 'Authors',\n            },\n        },\n        comments: {\n            name: 'Comment |||| Comments',\n            fields: {\n                body: 'Body',\n                created_at: 'Created at',\n                post_id: 'Posts',\n                author: {\n                    name: 'Author',\n                },\n            },\n        },\n        users: {\n            name: 'User |||| Users',\n            fields: {\n                name: 'Name',\n                role: 'Role',\n            },\n        },\n    },\n    post: {\n        list: {\n            search: 'Search',\n        },\n        form: {\n            summary: 'Summary',\n            body: 'Body',\n            miscellaneous: 'Miscellaneous',\n            comments: 'Comments',\n        },\n        edit: {\n            title: 'Post \"%{title}\"',\n        },\n        action: {\n            save_and_edit: 'Save and Edit',\n            save_and_add: 'Save and Add',\n            save_and_show: 'Save and Show',\n            save_with_average_note: 'Save with Note',\n        },\n    },\n    comment: {\n        list: {\n            about: 'About',\n        },\n    },\n    user: {\n        list: {\n            search: 'Search',\n        },\n        form: {\n            summary: 'Summary',\n            security: 'Security',\n        },\n        edit: {\n            title: 'User \"%{title}\"',\n        },\n        action: {\n            save_and_add: 'Save and Add',\n            save_and_show: 'Save and Show',\n        },\n    },\n};\n\nexport default messages;\n","import polyglotI18nProvider from 'ra-i18n-polyglot';\nimport englishMessages from './i18n/en';\n\nconst messages = {\n    fr: () => import('./i18n/fr.js').then(messages => messages.default),\n};\n\nexport default polyglotI18nProvider(locale => {\n    if (locale === 'fr') {\n        return messages[locale]();\n    }\n\n    // Always fallback on english\n    return englishMessages;\n}, 'en');\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport { Layout, AppBar, UserMenu, useLocale, useSetLocale } from 'react-admin';\nimport { makeStyles, MenuItem, ListItemIcon } from '@material-ui/core';\nimport Language from '@material-ui/icons/Language';\n\nconst useStyles = makeStyles(theme => ({\n    menuItem: {\n        color: theme.palette.text.secondary,\n    },\n    icon: { minWidth: theme.spacing(5) },\n}));\n\nconst SwitchLanguage = forwardRef((props, ref) => {\n    const locale = useLocale();\n    const setLocale = useSetLocale();\n    const classes = useStyles();\n    return (\n        <MenuItem\n            ref={ref}\n            className={classes.menuItem}\n            onClick={() => {\n                setLocale(locale === 'en' ? 'fr' : 'en');\n                props.onClick();\n            }}\n        >\n            <ListItemIcon className={classes.icon}>\n                <Language />\n            </ListItemIcon>\n            Switch Language\n        </MenuItem>\n    );\n});\n\nconst MyUserMenu = props => (\n    <UserMenu {...props}>\n        <SwitchLanguage />\n    </UserMenu>\n);\n\nconst MyAppBar = props => <AppBar {...props} userMenu={<MyUserMenu />} />;\n\nexport default props => <Layout {...props} appBar={MyAppBar} />;\n","import * as React from \"react\";\nimport { useMemo } from \"react\";\nimport RichTextInput from \"ra-input-rich-text\";\nimport {\n  ArrayInput,\n  AutocompleteInput,\n  BooleanInput,\n  Create,\n  DateInput,\n  FormDataConsumer,\n  RadioButtonGroupInput,\n  ReferenceInput,\n  SaveButton,\n  SelectInput,\n  SimpleForm,\n  SimpleFormIterator,\n  TextInput,\n  Toolbar,\n  required,\n} from \"react-admin\"; // eslint-disable-line import/no-unresolved\nimport { FormSpy } from \"react-final-form\";\n\nconst PostCreateToolbar = (props) => (\n  <Toolbar {...props}>\n    <SaveButton\n      label=\"post.action.save_and_edit\"\n      redirect=\"edit\"\n      submitOnEnter={true}\n    />\n    <SaveButton\n      label=\"post.action.save_and_show\"\n      redirect=\"show\"\n      submitOnEnter={false}\n      variant=\"text\"\n    />\n    <SaveButton\n      label=\"post.action.save_and_add\"\n      redirect={false}\n      submitOnEnter={false}\n      variant=\"text\"\n    />\n    <SaveButton\n      label=\"post.action.save_with_average_note\"\n      transform={(data) => ({ ...data, average_note: 10 })}\n      redirect=\"show\"\n      submitOnEnter={false}\n      variant=\"text\"\n    />\n  </Toolbar>\n);\n\nconst backlinksDefaultValue = [\n  {\n    date: new Date(),\n    url: \"http://google.com\",\n  },\n];\nconst PostCreate = ({ permissions, ...props }) => {\n  const initialValues = useMemo(\n    () => ({\n      average_note: 0,\n    }),\n    []\n  );\n\n  const dateDefaultValue = useMemo(() => new Date(), []);\n\n  return (\n    <Create {...props}>\n      <SimpleForm\n        toolbar={<PostCreateToolbar />}\n        initialValues={initialValues}\n        validate={(values) => {\n          const errors = {};\n          [\"ticket\"].forEach((field) => {\n            if (!values[field]) {\n              errors[field] = \"Required field\";\n            }\n          });\n\n          return errors;\n        }}\n      >\n        <TextInput autoFocus source=\"ticket\" />\n        <RadioButtonGroupInput\n          source=\"message relevance\"\n          choices={[\n            { id: \"yes\", name: \"Yes\" },\n            { id: \"no\", name: \"No\" },\n            { id: \"na\", name: \"N/A\" },\n          ]}\n        />\n        <BooleanInput source=\"undocumented\" defaultValue />\n        <RichTextInput source=\"note\" validate={required()} />\n        {/* <FormSpy subscription={{ values: true }}>\n          {({ values }) =>\n            values.ticket ? <NumberInput source=\"average_note\" /> : null\n          }\n        </FormSpy> */}\n\n        <DateInput source=\"published_at\" defaultValue={dateDefaultValue} />\n        <ArrayInput\n          source=\"backlinks\"\n          defaultValue={backlinksDefaultValue}\n          validate={[required()]}\n        >\n          <SimpleFormIterator>\n            <DateInput source=\"date\" />\n            <TextInput source=\"url\" />\n          </SimpleFormIterator>\n        </ArrayInput>\n        {permissions === \"admin\" && (\n          <ArrayInput source=\"authors\">\n            <SimpleFormIterator>\n              <ReferenceInput label=\"User\" source=\"user_id\" reference=\"users\">\n                <AutocompleteInput />\n              </ReferenceInput>\n              <FormDataConsumer>\n                {({ formData, scopedFormData, getSource, ...rest }) =>\n                  scopedFormData && scopedFormData.user_id ? (\n                    <SelectInput\n                      label=\"Role\"\n                      source={getSource(\"role\")}\n                      choices={[\n                        {\n                          id: \"headwriter\",\n                          name: \"Head Writer\",\n                        },\n                        {\n                          id: \"proofreader\",\n                          name: \"Proof reader\",\n                        },\n                        {\n                          id: \"cowriter\",\n                          name: \"Co-Writer\",\n                        },\n                      ]}\n                      {...rest}\n                    />\n                  ) : null\n                }\n              </FormDataConsumer>\n            </SimpleFormIterator>\n          </ArrayInput>\n        )}\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default PostCreate;\n","import * as React from 'react';\nimport { useTranslate } from 'react-admin';\n\nexport default ({ record }) => {\n    const translate = useTranslate();\n    return (\n        <span>\n            {record\n                ? translate('post.edit.title', { title: record.title })\n                : ''}\n        </span>\n    );\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useForm } from 'react-final-form';\nimport { AutocompleteArrayInput, ReferenceArrayInput } from 'react-admin';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    button: {\n        margin: '0 24px',\n        position: 'relative',\n    },\n    input: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        width: '50%',\n    },\n});\n\nconst TagReferenceInput = ({ ...props }) => {\n    const classes = useStyles();\n    const { change } = useForm();\n    const [filter, setFilter] = useState(true);\n\n    const handleAddFilter = () => {\n        setFilter(!filter);\n        change('tags', []);\n    };\n\n    return (\n        <div className={classes.input}>\n            <ReferenceArrayInput {...props} filter={{ published: filter }}>\n                <AutocompleteArrayInput />\n            </ReferenceArrayInput>\n            <Button\n                name=\"change-filter\"\n                className={classes.button}\n                onClick={handleAddFilter}\n            >\n                Filter {filter ? 'Unpublished' : 'Published'} Tags\n            </Button>\n        </div>\n    );\n};\n\nexport default TagReferenceInput;\n","import RichTextInput from \"ra-input-rich-text\";\nimport * as React from \"react\";\nimport {\n  TopToolbar,\n  AutocompleteInput,\n  ArrayInput,\n  BooleanInput,\n  CheckboxGroupInput,\n  Datagrid,\n  DateField,\n  DateInput,\n  Edit,\n  CloneButton,\n  ShowButton,\n  EditButton,\n  FormTab,\n  ImageField,\n  ImageInput,\n  NumberInput,\n  ReferenceManyField,\n  ReferenceInput,\n  SelectInput,\n  SimpleFormIterator,\n  TabbedForm,\n  TextField,\n  TextInput,\n  minValue,\n  number,\n  required,\n  FormDataConsumer,\n} from \"react-admin\"; // eslint-disable-line import/no-unresolved\nimport PostTitle from \"./PostTitle\";\nimport TagReferenceInput from \"./TagReferenceInput\";\n\nconst EditActions = ({ basePath, data, hasShow }) => (\n  <TopToolbar>\n    <CloneButton className=\"button-clone\" basePath={basePath} record={data} />\n    {hasShow && <ShowButton basePath={basePath} record={data} />}\n  </TopToolbar>\n);\n\nconst PostEdit = ({ permissions, ...props }) => (\n  <Edit title={<PostTitle />} actions={<EditActions />} {...props}>\n    <TabbedForm initialValues={{ average_note: 0 }} warnWhenUnsavedChanges>\n      <FormTab label=\"post.form.summary\">\n        <TextInput disabled source=\"id\" />\n        <TextInput source=\"title\" validate={required()} resettable />\n        <TextInput\n          multiline={true}\n          fullWidth={true}\n          source=\"teaser\"\n          validate={required()}\n          resettable\n        />\n        <CheckboxGroupInput\n          source=\"notifications\"\n          choices={[\n            { id: 12, name: \"Ray Hakt\" },\n            { id: 31, name: \"Ann Gullar\" },\n            { id: 42, name: \"Sean Phonee\" },\n          ]}\n        />\n        <ImageInput multiple source=\"pictures\" accept=\"image/*\">\n          <ImageField source=\"src\" title=\"title\" />\n        </ImageInput>\n        {permissions === \"admin\" && (\n          <ArrayInput source=\"authors\">\n            <SimpleFormIterator>\n              <ReferenceInput label=\"User\" source=\"user_id\" reference=\"users\">\n                <AutocompleteInput />\n              </ReferenceInput>\n              <FormDataConsumer>\n                {({ formData, scopedFormData, getSource, ...rest }) =>\n                  scopedFormData && scopedFormData.user_id ? (\n                    <SelectInput\n                      label=\"Role\"\n                      source={getSource(\"role\")}\n                      choices={[\n                        {\n                          id: \"headwriter\",\n                          name: \"Head Writer\",\n                        },\n                        {\n                          id: \"proofreader\",\n                          name: \"Proof reader\",\n                        },\n                        {\n                          id: \"cowriter\",\n                          name: \"Co-Writer\",\n                        },\n                      ]}\n                      {...rest}\n                    />\n                  ) : null\n                }\n              </FormDataConsumer>\n            </SimpleFormIterator>\n          </ArrayInput>\n        )}\n      </FormTab>\n      <FormTab label=\"post.form.body\">\n        <RichTextInput\n          source=\"body\"\n          label=\"\"\n          validate={required()}\n          addLabel={false}\n        />\n      </FormTab>\n      <FormTab label=\"post.form.miscellaneous\">\n        <TagReferenceInput reference=\"tags\" source=\"tags\" label=\"Tags\" />\n        <ArrayInput source=\"backlinks\">\n          <SimpleFormIterator>\n            <DateInput source=\"date\" />\n            <TextInput source=\"url\" />\n          </SimpleFormIterator>\n        </ArrayInput>\n        <DateInput source=\"published_at\" options={{ locale: \"pt\" }} />\n        <SelectInput\n          allowEmpty\n          resettable\n          source=\"category\"\n          choices={[\n            { name: \"Tech\", id: \"tech\" },\n            { name: \"Lifestyle\", id: \"lifestyle\" },\n          ]}\n        />\n        <NumberInput\n          source=\"average_note\"\n          validate={[required(), number(), minValue(0)]}\n        />\n        <BooleanInput source=\"undocumented\" defaultValue />\n        <TextInput disabled source=\"views\" />\n      </FormTab>\n      <FormTab label=\"post.form.comments\">\n        <ReferenceManyField\n          reference=\"comments\"\n          target=\"post_id\"\n          addLabel={false}\n          fullWidth\n        >\n          <Datagrid>\n            <DateField source=\"created_at\" />\n            <TextField source=\"author.name\" />\n            <TextField source=\"body\" />\n            <EditButton />\n          </Datagrid>\n        </ReferenceManyField>\n      </FormTab>\n    </TabbedForm>\n  </Edit>\n);\n\nexport default PostEdit;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport {\n    useUpdateMany,\n    useRefresh,\n    useNotify,\n    useUnselectAll,\n    Button,\n    CRUD_UPDATE_MANY,\n} from 'react-admin';\n\nconst ResetViewsButton = ({ resource, selectedIds }) => {\n    const notify = useNotify();\n    const unselectAll = useUnselectAll();\n    const refresh = useRefresh();\n    const [updateMany, { loading }] = useUpdateMany(\n        resource,\n        selectedIds,\n        { views: 0 },\n        {\n            action: CRUD_UPDATE_MANY,\n            onSuccess: () => {\n                notify(\n                    'ra.notification.updated',\n                    'info',\n                    { smart_count: selectedIds.length },\n                    true\n                );\n                unselectAll(resource);\n                refresh();\n            },\n            onFailure: error =>\n                notify(\n                    typeof error === 'string'\n                        ? error\n                        : error.message || 'ra.notification.http_error',\n                    'warning'\n                ),\n            undoable: true,\n        }\n    );\n\n    return (\n        <Button\n            label=\"simple.action.resetViews\"\n            disabled={loading}\n            onClick={updateMany}\n        >\n            <VisibilityOff />\n        </Button>\n    );\n};\n\nResetViewsButton.propTypes = {\n    basePath: PropTypes.string,\n    label: PropTypes.string,\n    resource: PropTypes.string.isRequired,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default ResetViewsButton;\n","import * as React from \"react\";\nimport { Children, Fragment, cloneElement, memo } from \"react\";\nimport BookIcon from \"@material-ui/icons/Book\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useMediaQuery, makeStyles } from \"@material-ui/core\";\nimport lodashGet from \"lodash/get\";\nimport jsonExport from \"jsonexport/dist\";\nimport {\n  BooleanField,\n  BulkDeleteButton,\n  BulkExportButton,\n  ChipField,\n  Datagrid,\n  DateField,\n  downloadCSV,\n  EditButton,\n  Filter,\n  List,\n  NumberField,\n  ReferenceArrayField,\n  SearchInput,\n  ShowButton,\n  SimpleList,\n  SingleFieldList,\n  TextField,\n  TextInput,\n  useTranslate,\n} from \"react-admin\"; // eslint-disable-line import/no-unresolved\n\nimport ResetViewsButton from \"./ResetViewsButton\";\nexport const PostIcon = BookIcon;\n\nconst useQuickFilterStyles = makeStyles((theme) => ({\n  chip: {\n    marginBottom: theme.spacing(1),\n  },\n}));\nconst QuickFilter = ({ label }) => {\n  const translate = useTranslate();\n  const classes = useQuickFilterStyles();\n  return <Chip className={classes.chip} label={translate(label)} />;\n};\n\nconst PostFilter = (props) => (\n  <Filter {...props}>\n    <SearchInput source=\"q\" alwaysOn />\n    <TextInput source=\"ticket\" defaultValue=\"Qui tempore rerum et voluptates\" />\n    <QuickFilter\n      label=\"resources.posts.fields.undocumented\"\n      source=\"undocumented\"\n      defaultValue\n    />\n  </Filter>\n);\n\nconst exporter = (posts) => {\n  const data = posts.map((post) => ({\n    ...post,\n    backlinks: lodashGet(post, \"backlinks\", []).map((backlink) => backlink.url),\n  }));\n  jsonExport(data, (err, csv) => downloadCSV(csv, \"posts\"));\n};\n\nconst useStyles = makeStyles((theme) => ({\n  ticket: {\n    maxWidth: \"20em\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n  },\n  hiddenOnSmallScreens: {\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  publishedAt: { fontStyle: \"italic\" },\n}));\n\nconst PostListBulkActions = memo((props) => (\n  <Fragment>\n    <ResetViewsButton {...props} />\n    <BulkDeleteButton {...props} />\n    <BulkExportButton {...props} />\n  </Fragment>\n));\n\nconst usePostListActionToolbarStyles = makeStyles({\n  toolbar: {\n    alignItems: \"center\",\n    display: \"flex\",\n    marginTop: -1,\n    marginBottom: -1,\n  },\n});\n\nconst PostListActionToolbar = ({ children, ...props }) => {\n  const classes = usePostListActionToolbarStyles();\n  return (\n    <div className={classes.toolbar}>\n      {Children.map(children, (button) => cloneElement(button, props))}\n    </div>\n  );\n};\n\nconst rowClick = (id, basePath, record) => {\n  if (record.undocumented) {\n    return \"edit\";\n  }\n\n  return \"show\";\n};\n\nconst PostPanel = ({ id, record, resource }) => (\n  <div dangerouslySetInnerHTML={{ __html: record.body }} />\n);\n\nconst PostList = (props) => {\n  const classes = useStyles();\n  const isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n  return (\n    <List\n      {...props}\n      bulkActionButtons={<PostListBulkActions />}\n      filters={<PostFilter />}\n      sort={{ field: \"published_at\", order: \"DESC\" }}\n      exporter={exporter}\n    >\n      {isSmall ? (\n        <SimpleList\n          primaryText={(record) => record.ticket}\n          secondaryText={(record) => `${record.views} views`}\n          tertiaryText={(record) =>\n            new Date(record.published_at).toLocaleDateString()\n          }\n        />\n      ) : (\n        <Datagrid rowClick={rowClick} expand={PostPanel} optimized>\n          <TextField source=\"id\" />\n          <TextField source=\"ticket\" cellClassName={classes.ticket} />\n          <DateField\n            source=\"published_at\"\n            sortByOrder=\"DESC\"\n            cellClassName={classes.publishedAt}\n          />\n\n          <BooleanField\n            source=\"undocumented\"\n            label=\"resources.posts.fields.commentable_short\"\n            sortable={false}\n          />\n          <NumberField source=\"views\" sortByOrder=\"DESC\" />\n          <ReferenceArrayField\n            label=\"Tags\"\n            reference=\"tags\"\n            source=\"tags\"\n            sortBy=\"tags.name\"\n            cellClassName={classes.hiddenOnSmallScreens}\n            headerClassName={classes.hiddenOnSmallScreens}\n          >\n            <SingleFieldList>\n              <ChipField source=\"name\" />\n            </SingleFieldList>\n          </ReferenceArrayField>\n          <PostListActionToolbar>\n            <EditButton />\n            <ShowButton />\n          </PostListActionToolbar>\n        </Datagrid>\n      )}\n    </List>\n  );\n};\n\nexport default PostList;\n","import { useShowController } from \"ra-core\";\nimport * as React from \"react\";\nimport {\n  ArrayField,\n  BooleanField,\n  CloneButton,\n  ChipField,\n  Datagrid,\n  DateField,\n  EditButton,\n  NumberField,\n  ReferenceArrayField,\n  ReferenceManyField,\n  RichTextField,\n  SelectField,\n  ShowView,\n  SingleFieldList,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  UrlField,\n} from \"react-admin\"; // eslint-disable-line import/no-unresolved\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport PostTitle from \"./PostTitle\";\n\nconst CreateRelatedComment = ({ record }) => (\n  <Button\n    component={Link}\n    to={{\n      pathname: \"/comments/create\",\n      state: { record: { post_id: record.id } },\n    }}\n  >\n    Add comment\n  </Button>\n);\n\nconst PostShow = (props) => {\n  const controllerProps = useShowController(props);\n  return (\n    <ShowView {...controllerProps} title={<PostTitle />}>\n      <TabbedShowLayout>\n        <Tab label=\"post.form.summary\">\n          <TextField source=\"id\" />\n          <TextField source=\"title\" />\n          {controllerProps.record &&\n            controllerProps.record.title ===\n              \"Fusce massa lorem, pulvinar a posuere ut, accumsan ac nisi\" && (\n              <TextField source=\"teaser\" />\n            )}\n          <ArrayField source=\"backlinks\">\n            <Datagrid>\n              <DateField source=\"date\" />\n              <UrlField source=\"url\" />\n            </Datagrid>\n          </ArrayField>\n        </Tab>\n        <Tab label=\"post.form.body\">\n          <RichTextField\n            source=\"body\"\n            stripTags={false}\n            label=\"\"\n            addLabel={false}\n          />\n        </Tab>\n        <Tab label=\"post.form.miscellaneous\">\n          <ReferenceArrayField reference=\"tags\" source=\"tags\">\n            <SingleFieldList>\n              <ChipField source=\"name\" />\n            </SingleFieldList>\n          </ReferenceArrayField>\n          <DateField source=\"published_at\" />\n          <SelectField\n            source=\"category\"\n            choices={[\n              { name: \"Tech\", id: \"tech\" },\n              { name: \"Lifestyle\", id: \"lifestyle\" },\n            ]}\n          />\n          <NumberField source=\"average_note\" />\n          <BooleanField source=\"undocumented\" />\n          <TextField source=\"views\" />\n          <CloneButton />\n        </Tab>\n        <Tab label=\"post.form.comments\">\n          <ReferenceManyField\n            addLabel={false}\n            reference=\"comments\"\n            target=\"post_id\"\n            sort={{ field: \"created_at\", order: \"DESC\" }}\n          >\n            <Datagrid>\n              <DateField source=\"created_at\" />\n              <TextField source=\"author.name\" />\n              <TextField source=\"body\" />\n              <EditButton />\n            </Datagrid>\n          </ReferenceManyField>\n          <CreateRelatedComment />\n        </Tab>\n      </TabbedShowLayout>\n    </ShowView>\n  );\n};\n\nexport default PostShow;\n","import BookIcon from '@material-ui/icons/Book';\nimport PostCreate from './PostCreate';\nimport PostEdit from './PostEdit';\nimport PostList from './PostList';\nimport PostShow from './PostShow';\n\nexport default {\n    list: PostList,\n    create: PostCreate,\n    edit: PostEdit,\n    show: PostShow,\n    icon: BookIcon,\n};\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('sm')]: {\n            width: 200,\n            margin: '1em',\n        },\n        [theme.breakpoints.down('sm')]: {\n            width: 0,\n            overflowX: 'hidden',\n            margin: 0,\n        },\n    },\n}));\n\nconst Aside = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h6\">App Users</Typography>\n            <Typography variant=\"body2\">\n                Eiusmod adipisicing tempor duis qui. Ullamco aliqua tempor\n                incididunt aliquip aliquip qui ad minim aliqua. Aute et magna\n                quis pariatur irure sunt. Aliquip velit consequat dolore ullamco\n                laborum voluptate cupidatat. Proident minim reprehenderit id\n                dolore elit sit occaecat ad amet tempor esse occaecat enim.\n                Laborum aliqua excepteur qui ipsum in dolor et cillum est.\n            </Typography>\n        </div>\n    );\n};\n\nexport default Aside;\n","/* eslint react/jsx-key: off */\nimport * as React from 'react';\nimport {\n    Create,\n    FormTab,\n    SaveButton,\n    AutocompleteInput,\n    TabbedForm,\n    TextInput,\n    Toolbar,\n    required,\n} from 'react-admin';\n\nimport Aside from './Aside';\n\nconst UserEditToolbar = ({\n    permissions,\n    hasList,\n    hasEdit,\n    hasShow,\n    hasCreate,\n    ...props\n}) => (\n    <Toolbar {...props}>\n        <SaveButton\n            label=\"user.action.save_and_show\"\n            redirect=\"show\"\n            submitOnEnter={true}\n        />\n        {permissions === 'admin' && (\n            <SaveButton\n                label=\"user.action.save_and_add\"\n                redirect={false}\n                submitOnEnter={false}\n                variant=\"text\"\n            />\n        )}\n    </Toolbar>\n);\n\nconst UserCreate = ({ permissions, ...props }) => (\n    <Create {...props} aside={<Aside />}>\n        <TabbedForm\n            toolbar={<UserEditToolbar permissions={permissions} {...props} />}\n        >\n            <FormTab label=\"user.form.summary\" path=\"\">\n                <TextInput\n                    source=\"name\"\n                    defaultValue=\"Slim Shady\"\n                    autoFocus\n                    validate={required()}\n                />\n            </FormTab>\n            {permissions === 'admin' && (\n                <FormTab label=\"user.form.security\" path=\"security\">\n                    <AutocompleteInput\n                        source=\"role\"\n                        choices={[\n                            { id: '', name: 'None' },\n                            { id: 'admin', name: 'Admin' },\n                            { id: 'user', name: 'User' },\n                            { id: 'user_simple', name: 'UserSimple' },\n                        ]}\n                    />\n                </FormTab>\n            )}\n        </TabbedForm>\n    </Create>\n);\n\nexport default UserCreate;\n","/* eslint react/jsx-key: off */\nimport * as React from 'react';\nimport { useTranslate } from 'react-admin';\n\nconst UserTitle = ({ record }) => {\n    const translate = useTranslate();\n    return (\n        <span>\n            {record ? translate('user.edit.title', { title: record.name }) : ''}\n        </span>\n    );\n};\n\nexport default UserTitle;\n","/* eslint react/jsx-key: off */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    CloneButton,\n    DeleteWithConfirmButton,\n    Edit,\n    FormTab,\n    required,\n    SaveButton,\n    SelectInput,\n    ShowButton,\n    TabbedForm,\n    TextInput,\n    Toolbar,\n    TopToolbar,\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport UserTitle from './UserTitle';\nimport Aside from './Aside';\n\nconst useToolbarStyles = makeStyles({\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n});\n\n/**\n * Custom Toolbar for the Edit form\n *\n * Save with undo, but delete with confirm\n */\nconst UserEditToolbar = props => {\n    const classes = useToolbarStyles();\n    return (\n        <Toolbar {...props} classes={classes}>\n            <SaveButton />\n            <DeleteWithConfirmButton />\n        </Toolbar>\n    );\n};\n\nconst EditActions = ({ basePath, data, hasShow }) => (\n    <TopToolbar>\n        <CloneButton\n            className=\"button-clone\"\n            basePath={basePath}\n            record={data}\n        />\n        <ShowButton basePath={basePath} record={data} />\n    </TopToolbar>\n);\n\nconst UserEdit = ({ permissions, ...props }) => (\n    <Edit\n        title={<UserTitle />}\n        aside={<Aside />}\n        actions={<EditActions />}\n        {...props}\n    >\n        <TabbedForm\n            defaultValue={{ role: 'user' }}\n            toolbar={<UserEditToolbar />}\n        >\n            <FormTab label=\"user.form.summary\" path=\"\">\n                {permissions === 'admin' && <TextInput disabled source=\"id\" />}\n                <TextInput\n                    source=\"name\"\n                    defaultValue=\"slim shady\"\n                    validate={required()}\n                />\n            </FormTab>\n            {permissions === 'admin' && (\n                <FormTab label=\"user.form.security\" path=\"security\">\n                    <SelectInput\n                        source=\"role\"\n                        validate={required()}\n                        choices={[\n                            { id: '', name: 'None' },\n                            { id: 'admin', name: 'Admin' },\n                            { id: 'user', name: 'User' },\n                        ]}\n                        defaultValue={'user'}\n                    />\n                </FormTab>\n            )}\n        </TabbedForm>\n    </Edit>\n);\n\nUserEdit.propTypes = {\n    id: PropTypes.any.isRequired,\n    location: PropTypes.object.isRequired,\n    match: PropTypes.object.isRequired,\n    permissions: PropTypes.string,\n};\n\nexport default UserEdit;\n","/* eslint react/jsx-key: off */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Edit, SimpleForm, TextInput, required } from 'react-admin';\n\nconst UserEditEmbedded = ({ permissions, ...props }) => (\n    /* Passing \" \" as title disables the custom title */\n    <Edit title=\" \" {...props}>\n        <SimpleForm initialValues={{ role: 'user' }}>\n            <TextInput\n                source=\"name\"\n                defaultValue=\"slim shady\"\n                validate={required()}\n            />\n        </SimpleForm>\n    </Edit>\n);\n\nUserEditEmbedded.propTypes = {\n    record: PropTypes.object,\n    basePath: PropTypes.string,\n    resource: PropTypes.string,\n    id: PropTypes.string,\n};\n\nexport default UserEditEmbedded;\n","/* eslint react/jsx-key: off */\nimport PeopleIcon from '@material-ui/icons/People';\nimport memoize from 'lodash/memoize';\nimport { useMediaQuery } from '@material-ui/core';\nimport * as React from 'react';\nimport {\n    BulkDeleteWithConfirmButton,\n    Datagrid,\n    Filter,\n    List,\n    SearchInput,\n    SimpleList,\n    TextField,\n    TextInput,\n} from 'react-admin';\n\nimport Aside from './Aside';\nimport UserEditEmbedded from './UserEditEmbedded';\nexport const UserIcon = PeopleIcon;\n\nconst UserFilter = ({ permissions, ...props }) => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <TextInput source=\"name\" />\n        {permissions === 'admin' ? <TextInput source=\"role\" /> : null}\n    </Filter>\n);\n\nconst UserBulkActionButtons = props => (\n    <BulkDeleteWithConfirmButton {...props} />\n);\n\nconst rowClick = memoize(permissions => (id, basePath, record) => {\n    return permissions === 'admin'\n        ? Promise.resolve('edit')\n        : Promise.resolve('show');\n});\n\nconst UserList = ({ permissions, ...props }) => (\n    <List\n        {...props}\n        filters={<UserFilter permissions={permissions} />}\n        filterDefaultValues={{ role: 'user' }}\n        sort={{ field: 'name', order: 'ASC' }}\n        aside={<Aside />}\n        bulkActionButtons={<UserBulkActionButtons />}\n    >\n        {useMediaQuery(theme => theme.breakpoints.down('sm')) ? (\n            <SimpleList\n                primaryText={record => record.name}\n                secondaryText={record =>\n                    permissions === 'admin' ? record.role : null\n                }\n            />\n        ) : (\n            <Datagrid\n                rowClick={rowClick(permissions)}\n                expand={<UserEditEmbedded />}\n                optimized\n            >\n                <TextField source=\"id\" />\n                <TextField source=\"name\" />\n                {permissions === 'admin' && <TextField source=\"role\" />}\n            </Datagrid>\n        )}\n    </List>\n);\n\nexport default UserList;\n","import PeopleIcon from '@material-ui/icons/People';\nimport UserCreate from './UserCreate';\nimport UserEdit from './UserEdit';\nimport UserList from './UserList';\nimport UserShow from './UserShow';\n\nexport default {\n    list: UserList,\n    create: UserCreate,\n    edit: UserEdit,\n    show: UserShow,\n    icon: PeopleIcon,\n};\n","/* eslint react/jsx-key: off */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Show, Tab, TabbedShowLayout, TextField } from 'react-admin'; // eslint-disable-line import/no-unresolved\n\nimport UserTitle from './UserTitle';\nimport Aside from './Aside';\n\nconst UserShow = ({ permissions, ...props }) => (\n    <Show title={<UserTitle />} aside={<Aside />} {...props}>\n        <TabbedShowLayout>\n            <Tab label=\"user.form.summary\">\n                <TextField source=\"id\" />\n                <TextField source=\"name\" />\n            </Tab>\n            {permissions === 'admin' && (\n                <Tab label=\"user.form.security\" path=\"security\">\n                    <TextField source=\"role\" />\n                </Tab>\n            )}\n        </TabbedShowLayout>\n    </Show>\n);\n\nUserShow.propTypes = {\n    location: PropTypes.object.isRequired,\n    match: PropTypes.object.isRequired,\n    permissions: PropTypes.string,\n};\n\nexport default UserShow;\n","/* eslint react/jsx-key: off */\nimport * as React from 'react';\nimport {\n    Create,\n    SimpleForm,\n    TextField,\n    TextInput,\n    required,\n} from 'react-admin';\n\nconst TagCreate = props => (\n    <Create {...props}>\n        <SimpleForm redirect=\"list\">\n            <TextField source=\"id\" />\n            <TextInput source=\"name\" validate={[required()]} />\n        </SimpleForm>\n    </Create>\n);\n\nexport default TagCreate;\n","/* eslint react/jsx-key: off */\nimport * as React from 'react';\nimport { Edit, SimpleForm, TextField, TextInput, required } from 'react-admin';\n\nconst TagEdit = props => (\n    <Edit {...props}>\n        <SimpleForm redirect=\"list\">\n            <TextField source=\"id\" />\n            <TextInput source=\"name\" validate={[required()]} />\n        </SimpleForm>\n    </Edit>\n);\n\nexport default TagEdit;\n","import * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport { List, EditButton } from 'react-admin';\nimport {\n    List as MuiList,\n    ListItem,\n    ListItemText,\n    ListItemSecondaryAction,\n    Collapse,\n    Card,\n    makeStyles,\n} from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles({\n    card: {\n        maxWidth: '20em',\n        marginTop: '1em',\n    },\n});\nconst SmallCard = ({ className, ...props }) => {\n    const classes = useStyles();\n    return <Card {...props} className={`${className} ${classes.card}`} />;\n};\n\nconst SubTree = ({ level, root, getChildNodes, openChildren, toggleNode }) => {\n    const childNodes = getChildNodes(root);\n    const hasChildren = childNodes.length > 0;\n    const open = openChildren.includes(root.id);\n    return (\n        <Fragment>\n            <ListItem\n                button={hasChildren}\n                onClick={() => hasChildren && toggleNode(root)}\n                style={{ paddingLeft: level * 16 }}\n            >\n                {hasChildren && open && <ExpandLess />}\n                {hasChildren && !open && <ExpandMore />}\n                {!hasChildren && <div style={{ width: 24 }}>&nbsp;</div>}\n                <ListItemText primary={root.name} />\n\n                <ListItemSecondaryAction>\n                    <EditButton record={root} basePath=\"/tags\" />\n                </ListItemSecondaryAction>\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <MuiList component=\"div\" disablePadding>\n                    {childNodes.map(node => (\n                        <SubTree\n                            key={node.id}\n                            root={node}\n                            getChildNodes={getChildNodes}\n                            openChildren={openChildren}\n                            toggleNode={toggleNode}\n                            level={level + 1}\n                        />\n                    ))}\n                </MuiList>\n            </Collapse>\n        </Fragment>\n    );\n};\n\nconst Tree = ({ ids, data }) => {\n    const [openChildren, setOpenChildren] = useState([]);\n    const toggleNode = node =>\n        setOpenChildren(state => {\n            if (state.includes(node.id)) {\n                return [\n                    ...state.splice(0, state.indexOf(node.id)),\n                    ...state.splice(state.indexOf(node.id) + 1, state.length),\n                ];\n            } else {\n                return [...state, node.id];\n            }\n        });\n    const nodes = ids.map(id => data[id]);\n    const roots = nodes.filter(node => typeof node.parent_id === 'undefined');\n    const getChildNodes = root =>\n        nodes.filter(node => node.parent_id === root.id);\n    return (\n        <MuiList>\n            {roots.map(root => (\n                <SubTree\n                    key={root.id}\n                    root={root}\n                    getChildNodes={getChildNodes}\n                    openChildren={openChildren}\n                    toggleNode={toggleNode}\n                    level={1}\n                />\n            ))}\n        </MuiList>\n    );\n};\n\nconst TagList = props => (\n    <List\n        {...props}\n        perPage={1000}\n        pagination={null}\n        component={SmallCard}\n        actions={null}\n    >\n        <Tree />\n    </List>\n);\n\nexport default TagList;\n","import TagCreate from './TagCreate';\nimport TagEdit from './TagEdit';\nimport TagList from './TagList';\nimport TagShow from './TagShow';\n\nexport default {\n    create: TagCreate,\n    edit: TagEdit,\n    list: TagList,\n    show: TagShow,\n};\n","import * as React from 'react';\nimport { Show, SimpleShowLayout, TextField } from 'react-admin'; // eslint-disable-line import/no-unresolved\n\nconst TagShow = props => (\n    <Show {...props}>\n        <SimpleShowLayout>\n            <TextField source=\"id\" />\n            <TextField source=\"name\" />\n        </SimpleShowLayout>\n    </Show>\n);\n\nexport default TagShow;\n","/* eslint react/jsx-key: off */\nimport * as React from 'react';\nimport { Admin, Resource } from 'react-admin'; // eslint-disable-line import/no-unresolved\nimport { render } from 'react-dom';\nimport { Route } from 'react-router-dom';\n\nimport authProvider from './authProvider';\nimport comments from './comments';\nimport CustomRouteLayout from './customRouteLayout';\nimport CustomRouteNoLayout from './customRouteNoLayout';\nimport dataProvider from './dataProvider';\nimport i18nProvider from './i18nProvider';\nimport Layout from './Layout';\nimport posts from './posts';\nimport users from './users';\nimport tags from './tags';\n\nrender(\n    <Admin\n        authProvider={authProvider}\n        dataProvider={dataProvider}\n        i18nProvider={i18nProvider}\n        title=\"Example Admin\"\n        layout={Layout}\n        customRoutes={[\n            <Route\n                exact\n                path=\"/custom\"\n                component={props => <CustomRouteNoLayout {...props} />}\n                noLayout\n            />,\n            <Route\n                exact\n                path=\"/custom2\"\n                component={props => <CustomRouteLayout {...props} />}\n            />,\n        ]}\n    >\n        {permissions => [\n            <Resource name=\"posts\" {...posts} />,\n            <Resource name=\"comments\" {...comments} />,\n            permissions ? <Resource name=\"users\" {...users} /> : null,\n            <Resource name=\"tags\" {...tags} />,\n        ]}\n    </Admin>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}